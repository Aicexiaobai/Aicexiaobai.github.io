<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zhang Xinshuo</title>
  
  
  <link href="https://yoursite.com/atom.xml" rel="self"/>
  
  <link href="https://yoursite.com/"/>
  <updated>2023-09-17T13:24:29.462Z</updated>
  <id>https://yoursite.com/</id>
  
  <author>
    <name>Zhang Xinshuo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>删除发布的文章</title>
    <link href="https://yoursite.com/2023/09/17/%E5%88%A0%E9%99%A4%E5%8F%91%E5%B8%83%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    <id>https://yoursite.com/2023/09/17/%E5%88%A0%E9%99%A4%E5%8F%91%E5%B8%83%E7%9A%84%E6%96%87%E7%AB%A0/</id>
    <published>2023-09-17T13:15:43.000Z</published>
    <updated>2023-09-17T13:24:29.462Z</updated>
    
    <content type="html"><![CDATA[<h1 id="🌴如何删除一篇已经发布的文章"><a href="#🌴如何删除一篇已经发布的文章" class="headerlink" title="🌴如何删除一篇已经发布的文章"></a>🌴如何删除一篇已经发布的文章</h1><h1 id="【置顶】【专栏】"><a href="#【置顶】【专栏】" class="headerlink" title="【置顶】【专栏】"></a>【置顶】【专栏】</h1><ul><li><p><a href="https://blog.csdn.net/qq_34243930/article/details/109046120#_2">起因</a></p></li><li><p><a href="https://blog.csdn.net/qq_34243930/article/details/109046120#_5">解决步骤总结</a></p></li><li><p><a href="https://blog.csdn.net/qq_34243930/article/details/109046120#_10">具体步骤如下</a></p></li><li><p><a href="https://blog.csdn.net/qq_34243930/article/details/109046120#_19">原因分析</a></p></li><li><p>解决步骤总结🧊</p><p>  1、删除文件夹<code>source/_posts</code>下目标文章markdown文件<br>  2、删除<code>.deploy_git</code>文件夹<br>  3、执行<code>hexo clean</code>后，再执行<code>hexo g</code>，<code>hexo g</code> 即可。</p><hr><h3 id="具体步骤如下"><a href="#具体步骤如下" class="headerlink" title="具体步骤如下:"></a>具体步骤如下:</h3></li></ul><p><strong>第一步</strong>，去文件夹<code>source/_posts</code>下删除你想要删除的文章。</p><p><img src="/2023/09/17/%E5%88%A0%E9%99%A4%E5%8F%91%E5%B8%83%E7%9A%84%E6%96%87%E7%AB%A0/"><img src="/2023/09/17/%E5%88%A0%E9%99%A4%E5%8F%91%E5%B8%83%E7%9A%84%E6%96%87%E7%AB%A0/1.png" alt="1"></p><p><strong>第二步</strong>，删除<code>.deploy_git</code>文件夹。<br><code>.deploy_git</code>是git部署用的文件。当你为 git 部署选项运行<code>hexo d</code>命令时，Hexo 会创建一个名为<code>.deploy_git</code>的文件夹，并将生成的文件复制到该文件夹。</p><p><img src="/2023/09/17/%E5%88%A0%E9%99%A4%E5%8F%91%E5%B8%83%E7%9A%84%E6%96%87%E7%AB%A0/2.png"></p><p><strong>第三步</strong>，执行<code>hexo clean</code>后，再执行<code>hexo g</code>，<code>hexo g</code> 即可。<br>发现文章删除成功✔</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;🌴如何删除一篇已经发布的文章&quot;&gt;&lt;a href=&quot;#🌴如何删除一篇已经发布的文章&quot; class=&quot;headerlink&quot; title=&quot;🌴如何删除一篇已经发布的文章&quot;&gt;&lt;/a&gt;🌴如何删除一篇已经发布的文章&lt;/h1&gt;&lt;h1 id=&quot;【置顶】【专栏】&quot;&gt;&lt;a </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于typora写Markdown那些事</title>
    <link href="https://yoursite.com/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>https://yoursite.com/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/</id>
    <published>2023-09-17T08:30:29.000Z</published>
    <updated>2023-09-17T11:54:22.029Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-关于typora写Markdown那些事"><a href="#一-关于typora写Markdown那些事" class="headerlink" title="一.关于typora写Markdown那些事~"></a>一.关于typora写Markdown那些事~</h1><p>嗯哼~~ :smirk_cat:</p><p>​和大家讲讲我连接好<code>GitHub</code>后，利用<code>typora</code>写Markdown，然后再查阅资料，如何上传的自己的<code>hexo</code>上面，以及中间遇见的各种<code>bug</code>和解决方案我也会分享给大家，希望对大家会有所帮助吧。📚</p><hr><h2 id="scroll-Markdown-是什么？"><a href="#scroll-Markdown-是什么？" class="headerlink" title=":scroll:Markdown 是什么？"></a>:scroll:Markdown 是什么？</h2><p>​Markdown 是一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。Markdown 由 John Gruber 于 2004 年创建，如今已成为世界上最受欢迎的标记语言之一。📚</p><blockquote><ol><li>专注于文字内容；</li><li>纯文本，易读易写，可以方便地纳入版本控制；</li><li>语法简单，没有什么学习成本，能轻松在码字的同时做出美观大方的排版。</li></ol></blockquote><hr><h2 id="scroll-为什么要使用-Markdown？-scroll"><a href="#scroll-为什么要使用-Markdown？-scroll" class="headerlink" title=":scroll:为什么要使用 Markdown？:scroll"></a>:scroll:为什么要使用 Markdown？:scroll</h2><p>​当你可以通过按下界面中的按钮来设置文本格式时，为什么还要使用 Markdown 来书写呢？使用 Markdown 而不是 word 类编辑器的原因有：</p><ul><li><p><strong>Markdown 无处不在。</strong>CSDN、掘金、简书、GitBook等。主流的代码托管平台，如 GitHub、GitLab、BitBucket、Gitee 等等，都支持 Markdown 语法，很多开源项目的 README、开发文档、帮助文档、Wiki 等都用 Markdown 写作。</p></li><li><p><strong>Markdown 是纯文本可移植的。</strong>几乎可以使用任何应用程序打开包含 Markdown 格式的文本文件。如果你不喜欢当前使用的 Markdown 应用程序了，则可以将 Markdown 文件导入另一个 Markdown 应用程序中。这与 Microsoft Word 等文字处理应用程序形成了鲜明的对比，Microsoft Word 将你的内容锁定在专有文件格式中。📚</p><hr></li></ul><h2 id="scroll-工欲善其事，必先利其器"><a href="#scroll-工欲善其事，必先利其器" class="headerlink" title=":scroll:工欲善其事，必先利其器"></a>:scroll:工欲善其事，必先利其器</h2><p>​<strong>先安装typora安装包</strong>，我分享一下我安找到<code>typora</code>破解版的压缩包吧。我把压缩包放在我的百度网盘了，大家可以直接找到安装包了。<br>​<a href="https://pan.baidu.com/s/1Y8laBAgVfWlAOB9m42D3aw">百度网盘链接</a>（按住Ctrl键点击就会进去了哦~）<br>​提取码：ZXSa</p><p>​<em><strong>安装步骤：</strong></em></p><p>​<img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/typora%E5%AE%89%E8%A3%85%E5%8C%85%E5%86%85%E5%AE%B9.png"></p><ol><li>压缩包里面的目录是这样的；一般就是默认</li><li>双击exe文件，选择软件安装路径：（一般情况下默认了）</li></ol><p><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/1.png"></p><p>3.取消勾选，点击finish。</p><p><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/2.png"></p><p>4.将crack破解文件夹中的【app.asar】复制到软件安装路径下的【resources】文件夹内替换源文件文件路径：</p><p><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/3.png"></p><p>5.准备激活<code>typora</code></p><p><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/4.png"></p><p>6.输入激活码：</p><p><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/5.png"></p><p><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/6.png"></p><p>​大家可以碰碰运气，这个序列号是我在一个博主那里找到的，没想到还能用，hhh~:smile::smile::smile:</p><p>​这时<code>typora</code>就安装完了，大家可以再搜索一下<code>typora</code>的使用技巧。:seedling:</p><h1 id="🧊二-typora写完如何上传到github"><a href="#🧊二-typora写完如何上传到github" class="headerlink" title="🧊二. typora写完如何上传到github~"></a>🧊二. typora写完如何上传到github~</h1><ul><li>Step 1. 将__config.yml 中的 post_asset_folder 设置为 true📚<img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/7.png"></li></ul><p><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/8.png"></p><ul><li>这样每次创建文章的时候会生成<strong>同名的文件夹</strong>，可以将<strong>图片等资源文件</strong>放进去。</li></ul><p><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/9.png"></p><h2 id="🧊-如何使用hexo创建一个md文件-smiling-imp"><a href="#🧊-如何使用hexo创建一个md文件-smiling-imp" class="headerlink" title="🧊 如何使用hexo创建一个md文件:smiling_imp:"></a>🧊 如何使用hexo创建一个md文件:smiling_imp:</h2><ol><li><p>​直接使用<code>hexo new post &quot;笔记&quot;</code>生成一个md文件（只有首部，没有内容），将你的原文件内容复制入该文件。</p><p> <img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/10.png"></p></li></ol><p><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/11.png"></p><p>我是因为直接把生成的文档拖进source&#x2F;_post文件夹中，用 <code>hexo g</code>就报了错。</p><p><em><strong>解决方法</strong></em></p><p>使用<code>hexo new post &quot;笔记&quot;</code>生成一个md文件（只有首部，没有内容），将你的原文件内容复制入该文件。</p><hr><p><em><strong>继续往下走：</strong></em>打开git bash,达到hexo网站的目录下，使用hexo g 命令产生静态文件</p><p><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/12.png"></p><p><em><strong>最后：</strong></em>使用命令 hexo d 来将生成的静态文件部署到你的博客网站上。</p><p><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/13.png"></p><h2 id="🧊-然后到http-localhost-4000-预览网站效果。"><a href="#🧊-然后到http-localhost-4000-预览网站效果。" class="headerlink" title="🧊 然后到http://localhost:4000/预览网站效果。"></a>🧊 然后到<a href="http://localhost:4000/%E9%A2%84%E8%A7%88%E7%BD%91%E7%AB%99%E6%95%88%E6%9E%9C%E3%80%82">http://localhost:4000/预览网站效果。</a></h2><h2 id="👀在此过程中遇见的bug"><a href="#👀在此过程中遇见的bug" class="headerlink" title="👀在此过程中遇见的bug:"></a>👀在此过程中遇见的bug:</h2><blockquote><h4 id="解决hexo-Typora-图片上传问题"><a href="#解决hexo-Typora-图片上传问题" class="headerlink" title="解决hexo + Typora 图片上传问题"></a>解决hexo + Typora 图片上传问题</h4></blockquote><p>解决hexo + <a href="https://so.csdn.net/so/search?q=Typora&spm=1001.2101.3001.7020">Typora</a>图片上传不显示的问题:</p><h3 id="🚀解决步骤："><a href="#🚀解决步骤：" class="headerlink" title="🚀解决步骤："></a>🚀解决步骤：</h3><ul><li>按如下步骤修改设定Typora中图片放置的位置</li><li>这样当自己新建一个文章后，如果添加图片，会在文章所在目录下生成一个与文章同名的文件夹，并将图片存入该文件夹中，此后该文章中所有添加的图片均存入该文件夹中。</li><li><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/14.png"></li></ul><p><img src="/2023/09/17/%E5%85%B3%E4%BA%8Etypora%E5%86%99Markdown%E9%82%A3%E4%BA%9B%E4%BA%8B/15.png"></p><p>修改博客根目录下的_config.yml文件中的post_asset_folder字段设置为true</p><p>当设置 post_asset_folder 参数后，在hexo n命令建立文件时， 会自动建立一个与文章同名的文件夹，把与该文章相关的所有图片资源都放到此文件夹内，这样就可以方便的使用图片资源</p><p>同时，只有当post_asset_folder设置为true后，后续安装的插件才会起作用<br>**安装插件</p><p>到博客的根目录下执行 npm install <a href="https://github.com/CodeFalling/hexo-asset-image">https://github.com/CodeFalling/hexo-asset-image</a> –save 命令来进行插件的安装</p><p>当文章全部写完后,复制到所用<code>hexo new post </code>所建立的文件，然后<code>hexo g， hexo s</code> 即可上传到自己的hexo。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-关于typora写Markdown那些事&quot;&gt;&lt;a href=&quot;#一-关于typora写Markdown那些事&quot; class=&quot;headerlink&quot; title=&quot;一.关于typora写Markdown那些事~&quot;&gt;&lt;/a&gt;一.关于typora写Markdown</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>笔记 一</title>
    <link href="https://yoursite.com/2023/09/17/%E7%AC%94%E8%AE%B0-%E4%B8%80/"/>
    <id>https://yoursite.com/2023/09/17/%E7%AC%94%E8%AE%B0-%E4%B8%80/</id>
    <published>2023-09-17T06:44:01.000Z</published>
    <updated>2023-09-17T06:48:50.658Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown的基本使用"><a href="#Markdown的基本使用" class="headerlink" title="Markdown的基本使用"></a>Markdown的基本使用</h1><h2 id="一，Markdown的基本语法-small-airplane"><a href="#一，Markdown的基本语法-small-airplane" class="headerlink" title="一，Markdown的基本语法:small_airplane:"></a>一，Markdown的基本语法:small_airplane:</h2><h3 id="1-标题的调整-smiley"><a href="#1-标题的调整-smiley" class="headerlink" title="1.标题的调整:smiley:"></a>1.标题的调整:smiley:</h3><blockquote><p>&#x3D;&#x3D;快捷键：&#x3D;&#x3D;</p><p>Ctrl＋数字1-6可以快速将选中的文本调成对应级别的标题</p><p>Ctrl＋0可以将选中的文本调成普通文本</p><p>Ctrl＋加号&#x2F;减号对标题的级别数进行加减</p></blockquote><h3 id="2-段落-smiley"><a href="#2-段落-smiley" class="headerlink" title="2.段落:smiley:"></a>2.段落:smiley:</h3><h4 id="1-换行"><a href="#1-换行" class="headerlink" title="1.换行"></a>1.换行</h4><h5 id="第一种："><a href="#第一种：" class="headerlink" title="第一种："></a>第一种：</h5><p>&#x3D;&#x3D;enter用法：&#x3D;&#x3D;</p><p>这是第一行</p><p>这是第二行</p><h5 id="第二种："><a href="#第二种：" class="headerlink" title="第二种："></a>第二种：</h5><p>&#x3D;&#x3D;shift＋enter用法：&#x3D;&#x3D;</p><p>这是第一行<br>这是第二行</p><p>![](Desktop&#x2F;截图&#x2F;enter和shift enter的区别.png)</p><hr><h4 id="3-代码："><a href="#3-代码：" class="headerlink" title="3.代码："></a>3.代码：</h4><blockquote><h5 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;使用“```语言名称”生成代码块</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;用“&#96;&#96;&#96;”生成代码块&#x3D;&#x3D;</p><p>&#x3D;&#x3D;快捷键&#x3D;&#x3D;：<code>Ctrl＋shift＋k</code></p><h5 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h5><p>&#x3D;&#x3D;用“&#96;&#96;&#96;”生成代码块&#x3D;&#x3D;</p><p>&#x3D;&#x3D;快捷键&#x3D;&#x3D;：<code>Ctrl＋shift＋</code></p><h5 id="行内代码-1"><a href="#行内代码-1" class="headerlink" title="行内代码"></a>行内代码</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;“`”JAVA“`”</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`\<span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>`</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p><code>\#define MaxSize 10</code></p></blockquote><blockquote><p><code>typedef struct&#123;</code></p></blockquote><blockquote><p>  <code>int data[MaxSize];</code></p></blockquote><blockquote><p>  <code>int length;</code></p></blockquote><blockquote><p><code>&#125;SqList;//静态实现顺序表</code></p></blockquote><blockquote><p><code>void InitList(SqList &amp;L)&#123;</code></p></blockquote><blockquote><p>  <code>for(int i=0;i&lt;MaxSize;i++)</code></p></blockquote><blockquote><p>​    <code>L.data[i]=0;</code></p></blockquote><blockquote><p>​    <code>L.length=0;</code></p></blockquote><blockquote><p>  <code>&#125;</code></p></blockquote><blockquote><p><code>int main()&#123;</code></p></blockquote><blockquote><p>  <code>SqList L ;</code></p></blockquote><blockquote><p>  <code>InitList(L);</code></p></blockquote><blockquote><p>  <code>return 0;</code></p></blockquote><blockquote><p><code>&#125;</code></p></blockquote><blockquote><p><code>//bool InitInsert(SqList &amp;L,int i,int e)&#123;</code></p></blockquote><blockquote><p><code>//  if(i&lt;1||i&gt;L.length)</code></p></blockquote><blockquote><p><code>//    return false;</code></p></blockquote><blockquote><p><code>//  if(L.length = MaxSize)</code></p></blockquote><blockquote><p><code>//    return false;</code></p></blockquote><blockquote><p><code>//  for(int j=L.length;j&gt;=i;j--)</code></p></blockquote><blockquote><p><code>//    L.data[j]=L.data[j-1];</code></p></blockquote><blockquote><p><code>//  L.data[i-1]=e;</code></p></blockquote><blockquote><p><code>//  L.length++;</code></p></blockquote><blockquote><p><code>//  return true;</code></p></blockquote><blockquote><p><code>//&#125;</code></p></blockquote><blockquote><p><code>bool InitInsert(SqList &amp;L ,int i ,int e)&#123;</code></p></blockquote><blockquote><p>  <code>if(i&lt;1||i&gt;=L.length+1)</code></p></blockquote><blockquote><p>​    <code>return false;</code></p></blockquote><blockquote><p>  <code>if(L.length = MaxSize)</code></p></blockquote><blockquote><p>​    <code>return false;</code></p></blockquote><blockquote><p>  <code>for(int j=L.length;j&gt;=i;j--)</code></p></blockquote><blockquote><p>​    <code>L.data[j]=l.data[j-1];</code></p></blockquote><blockquote><p>  <code>L.data[i-1]=e;</code></p></blockquote><blockquote><p>  <code>L.length++;</code></p></blockquote><blockquote><p>  <code>return true;</code></p></blockquote><blockquote><p><code>&#125;</code></p></blockquote><blockquote><p><code>bool InitDelete(SqList L ,int i,int &amp;e)&#123;</code></p></blockquote><blockquote><p>  <code>if(i&lt;1||i&gt;L.length)</code></p></blockquote><blockquote><p>​    <code>return false;</code></p></blockquote><blockquote><p>  <code>for(int j=i;j&lt;L.length;j++)</code></p></blockquote><blockquote><p>​    <code>L.data[j-1]=L.data[j];</code></p></blockquote><blockquote><p>  <code>L.length--;</code></p></blockquote><blockquote><p>  <code>return true;</code></p></blockquote><blockquote><p><code>&#125;</code></p></blockquote><blockquote><p><code>int main()&#123;</code></p></blockquote><blockquote><p>  <code>SqList L;</code></p></blockquote><blockquote><p>  <code>InitList(L);</code></p></blockquote><blockquote><p>  <code>int e = -1;</code></p></blockquote><blockquote><p>  <code>if(ListDelete(L,3,e))</code></p></blockquote><blockquote><p>​    <code>printf(&quot;已经删除第三个数据元素，删除元素值为%d\n&quot;,e);</code></p></blockquote><blockquote><p>  <code>else</code></p></blockquote><blockquote><p>​    <code>printf(&quot;位序i不合法，删除失败\n&quot;);</code></p></blockquote><blockquote><p>  <code>return 0;</code></p></blockquote><blockquote><p>&#96;&#96;  </p></blockquote><blockquote><p>&#96;&#96;  </p></blockquote><blockquote><p><code>&#125;</code></p></blockquote><blockquote><p><code>\#include &lt;stdlib.h&gt;</code></p></blockquote><blockquote><p><code>\#define InitSize 10//初始化顺序表长度</code></p></blockquote><blockquote><p><code>typedef struct&#123;</code></p></blockquote><blockquote><p>  <code>int *data;//指示动态数组分配的指针</code></p></blockquote><blockquote><p>  <code>int MaxSize;//顺序表的最大容量</code></p></blockquote><blockquote><p>  <code>int length;//顺序表的当前长度</code></p></blockquote><blockquote><p><code>&#125;SqList1;</code></p></blockquote><blockquote><p><code>void InitList(SqList &amp;L)&#123;</code></p></blockquote><blockquote><p>  <code>//利用malloc函数申请一篇连续的空间</code></p></blockquote><blockquote><p>  <code>L.data = (int *)malloc(InitSize*sizeof(int));//malloc 返回一个指针类型，需要强转为动态指针的类型</code></p></blockquote><blockquote><p>  <code>L.length=0;</code></p></blockquote><blockquote><p>  <code>L.MaxSize = InitSize;</code></p></blockquote><blockquote><p><code>&#125;</code></p></blockquote></blockquote><h2 id="二，跳转-small-airplane"><a href="#二，跳转-small-airplane" class="headerlink" title="二，跳转:small_airplane:"></a>二，跳转:small_airplane:</h2><h4 id="外部跳转-超链接-smiley"><a href="#外部跳转-超链接-smiley" class="headerlink" title="外部跳转-超链接:smiley:"></a>外部跳转-超链接:smiley:</h4><p>&#x3D;&#x3D;格式为<code>[link text ](link) </code>&#x3D;&#x3D;</p><h5 id="eg"><a href="#eg" class="headerlink" title="eg:"></a>eg:</h5><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[提示链接](https://aicexiaobai.github.io/)</span><br></pre></td></tr></table></figure></blockquote><p>请访问我的链接哦~</p><p><a href="https://aicexiaobai.github.io/">提示链接</a>（按住Ctrl键再点击链接就会跳转。）</p><h4 id="内部跳转-本文件内跳-Typroa支持-small-red-triangle-down"><a href="#内部跳转-本文件内跳-Typroa支持-small-red-triangle-down" class="headerlink" title="内部跳转-本文件内跳(Typroa支持):small_red_triangle_down:"></a>内部跳转-本文件内跳(Typroa支持):small_red_triangle_down:</h4><p>&#x3D;&#x3D;格式为：[link text] (#要去的目的地–标题)&#x3D;&#x3D;</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[我想跳转](#饼图 (Pie))</span><br></pre></td></tr></table></figure><p><a href="#%E6%AE%B5%E8%90%BD#()">我想跳转</a></p></blockquote><h4 id="自动链接-small-red-triangle-down"><a href="#自动链接-small-red-triangle-down" class="headerlink" title="自动链接:small_red_triangle_down:"></a>自动链接:small_red_triangle_down:</h4><p>&#x3D;&#x3D;使用<code>&lt;&gt;</code>包括的链接会自动跳转为超链接：&#x3D;&#x3D;</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.baidu.com</span><br></pre></td></tr></table></figure></blockquote><p><a href="https://www.baidu.com/">https://www.baidu.com</a></p><h2 id="三，插入图片-small-airplane"><a href="#三，插入图片-small-airplane" class="headerlink" title="三，插入图片:small_airplane:"></a>三，插入图片:small_airplane:</h2><h5 id="基本语法：-smiley"><a href="#基本语法：-smiley" class="headerlink" title="基本语法：:smiley:"></a>基本语法：:smiley:</h5><p><img src="/2023/09/17/%E7%AC%94%E8%AE%B0-%E4%B8%80/enter%E5%92%8Cshift%20enter%E7%9A%84%E5%8C%BA%E5%88%AB.png"></p><h5 id="插入表格：-small-orange-diamond"><a href="#插入表格：-small-orange-diamond" class="headerlink" title="插入表格：:small_orange_diamond:"></a>插入表格：:small_orange_diamond:</h5><p>​&#x3D;&#x3D;用<code>|</code>来分隔不同的单元格，使用<code>-</code>来分隔表头和其他行：&#x3D;&#x3D;</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name | price</span><br><span class="line">--- | ---</span><br><span class="line">friend | 19</span><br><span class="line">cola | 32</span><br></pre></td></tr></table></figure></blockquote><table><thead><tr><th>学校</th><th>姓名</th><th>年龄</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr></tbody></table><p>​为了美观可以使用空格对齐不同的单元格，并在两侧使用<code>|</code>来标记单元格的边界，在表头下方的分割线标记中加入<code>:</code>,即可标记下方单元格的对齐方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|name           |price|</span><br><span class="line">|:--------------|:----|</span><br><span class="line">|friend chicken | 19  |</span><br><span class="line">|cola           |21   |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">name</th><th align="left">price</th></tr></thead><tbody><tr><td align="left">friend chicken</td><td align="left">19</td></tr><tr><td align="left">cola</td><td align="left">21</td></tr></tbody></table><h4 id="列表"><a href="#列表" class="headerlink" title="列表:"></a>列表:</h4><h4 id="1，无序列表-small-red-triangle-down"><a href="#1，无序列表-small-red-triangle-down" class="headerlink" title="1，无序列表:small_red_triangle_down:"></a>1，无序列表:small_red_triangle_down:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">可以使用“*”作为标记</span><br><span class="line">也可以使用“＋”</span><br><span class="line">-或者`-`</span><br></pre></td></tr></table></figure><ul><li>hhh</li></ul><h4 id="2，有序列表-数字-空格-small-red-triangle-down"><a href="#2，有序列表-数字-空格-small-red-triangle-down" class="headerlink" title="2，有序列表-数字.空格:small_red_triangle_down:"></a>2，有序列表-数字.空格:small_red_triangle_down:</h4><p>1. </p><h4 id="3-任务列表-small-red-triangle-down"><a href="#3-任务列表-small-red-triangle-down" class="headerlink" title="3.任务列表:small_red_triangle_down:"></a>3.任务列表:small_red_triangle_down:</h4><p><code>代码</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. -[ ]吃早餐</span><br><span class="line">2. -[x]背单词</span><br></pre></td></tr></table></figure><p><code>效果</code>:</p><ul><li><p><input disabled type="checkbox"> </p></li><li><p><input checked disabled type="checkbox"> 吃早餐</p><p>  “-”[ ] ＋enter 生成</p></li></ul><h4 id="4-区块显示：-sweat-smile"><a href="#4-区块显示：-sweat-smile" class="headerlink" title="4.区块显示：:sweat_smile:"></a>4.区块显示：:sweat_smile:</h4><h4 id="“-”＋-enter"><a href="#“-”＋-enter" class="headerlink" title="“&gt;”＋ enter"></a>“&gt;”＋ enter</h4><p><code>效果</code>:</p><blockquote></blockquote><h2 id="四，分隔线-small-airplane"><a href="#四，分隔线-small-airplane" class="headerlink" title="四，分隔线:small_airplane:"></a>四，分隔线:small_airplane:</h2><hr><p>&#x3D;&#x3D;***加空格点回车即可&#x3D;&#x3D;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Markdown的基本使用&quot;&gt;&lt;a href=&quot;#Markdown的基本使用&quot; class=&quot;headerlink&quot; title=&quot;Markdown的基本使用&quot;&gt;&lt;/a&gt;Markdown的基本使用&lt;/h1&gt;&lt;h2 id=&quot;一，Markdown的基本语法-small</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>笔记</title>
    <link href="https://yoursite.com/2019/11/21/#Markdown%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>https://yoursite.com/2019/11/21/#Markdown%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2019-11-21T05:44:57.000Z</published>
    <updated>2023-09-17T04:06:13.407Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown的基本使用"><a href="#Markdown的基本使用" class="headerlink" title="Markdown的基本使用"></a>Markdown的基本使用</h1><h2 id="一，Markdown的基本语法-small-airplane"><a href="#一，Markdown的基本语法-small-airplane" class="headerlink" title="一，Markdown的基本语法:small_airplane:"></a>一，Markdown的基本语法:small_airplane:</h2><h3 id="1-标题的调整-smiley"><a href="#1-标题的调整-smiley" class="headerlink" title="1.标题的调整:smiley:"></a>1.标题的调整:smiley:</h3><blockquote><p>&#x3D;&#x3D;快捷键：&#x3D;&#x3D;</p><p>Ctrl＋数字1-6可以快速将选中的文本调成对应级别的标题</p><p>Ctrl＋0可以将选中的文本调成普通文本</p><p>Ctrl＋加号&#x2F;减号对标题的级别数进行加减</p></blockquote><h3 id="2-段落-smiley"><a href="#2-段落-smiley" class="headerlink" title="2.段落:smiley:"></a>2.段落:smiley:</h3><h4 id="1-换行"><a href="#1-换行" class="headerlink" title="1.换行"></a>1.换行</h4><h5 id="第一种："><a href="#第一种：" class="headerlink" title="第一种："></a>第一种：</h5><p>&#x3D;&#x3D;enter用法：&#x3D;&#x3D;</p><p>这是第一行</p><p>这是第二行</p><h5 id="第二种："><a href="#第二种：" class="headerlink" title="第二种："></a>第二种：</h5><p>&#x3D;&#x3D;shift＋enter用法：&#x3D;&#x3D;</p><p>这是第一行<br>这是第二行</p><p>![](Desktop&#x2F;截图&#x2F;enter和shift enter的区别.png)</p><hr><h4 id="3-代码："><a href="#3-代码：" class="headerlink" title="3.代码："></a>3.代码：</h4><blockquote><h5 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;使用“```语言名称”生成代码块</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;用“&#96;&#96;&#96;”生成代码块&#x3D;&#x3D;</p><p>&#x3D;&#x3D;快捷键&#x3D;&#x3D;：<code>Ctrl＋shift＋k</code></p><h5 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h5><p>&#x3D;&#x3D;用“&#96;&#96;&#96;”生成代码块&#x3D;&#x3D;</p><p>&#x3D;&#x3D;快捷键&#x3D;&#x3D;：<code>Ctrl＋shift＋</code></p><h5 id="行内代码-1"><a href="#行内代码-1" class="headerlink" title="行内代码"></a>行内代码</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;“`”JAVA“`”</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line">`\<span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>`</span></span><br><span class="line"></span><br><span class="line">`\<span class="meta">#<span class="keyword">define</span> MaxSize 10`</span></span><br><span class="line"></span><br><span class="line">`<span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;`</span><br><span class="line"></span><br><span class="line">  `<span class="type">int</span> data[MaxSize];`</span><br><span class="line"></span><br><span class="line">  `<span class="type">int</span> length;`</span><br><span class="line"></span><br><span class="line">`&#125;SqList;<span class="comment">//静态实现顺序表`</span></span><br><span class="line"></span><br><span class="line">`<span class="function"><span class="type">void</span> <span class="title">InitList</span><span class="params">(SqList &amp;L)</span></span>&#123;`</span><br><span class="line"></span><br><span class="line">  `<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;MaxSize;i++)`</span><br><span class="line"></span><br><span class="line">​    `L.data[i]=<span class="number">0</span>;`</span><br><span class="line"></span><br><span class="line">​    `L.length=<span class="number">0</span>;`</span><br><span class="line"></span><br><span class="line">  `&#125;`</span><br><span class="line"></span><br><span class="line">`<span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;`</span><br><span class="line"></span><br><span class="line">  `SqList L ;`</span><br><span class="line"></span><br><span class="line">  `<span class="built_in">InitList</span>(L);`</span><br><span class="line"></span><br><span class="line">  `<span class="keyword">return</span> <span class="number">0</span>;`</span><br><span class="line"></span><br><span class="line">`&#125;`</span><br><span class="line"></span><br><span class="line">`<span class="comment">//bool InitInsert(SqList &amp;L,int i,int e)&#123;`</span></span><br><span class="line"></span><br><span class="line">`<span class="comment">//  if(i&lt;1||i&gt;L.length)`</span></span><br><span class="line"></span><br><span class="line">`<span class="comment">//    return false;`</span></span><br><span class="line"></span><br><span class="line">`<span class="comment">//  if(L.length = MaxSize)`</span></span><br><span class="line"></span><br><span class="line">`<span class="comment">//    return false;`</span></span><br><span class="line"></span><br><span class="line">`<span class="comment">//  for(int j=L.length;j&gt;=i;j--)`</span></span><br><span class="line"></span><br><span class="line">`<span class="comment">//    L.data[j]=L.data[j-1];`</span></span><br><span class="line"></span><br><span class="line">`<span class="comment">//  L.data[i-1]=e;`</span></span><br><span class="line"></span><br><span class="line">`<span class="comment">//  L.length++;`</span></span><br><span class="line"></span><br><span class="line">`<span class="comment">//  return true;`</span></span><br><span class="line"></span><br><span class="line">`<span class="comment">//&#125;`</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">`<span class="function"><span class="type">bool</span> <span class="title">InitInsert</span><span class="params">(SqList &amp;L ,<span class="type">int</span> i ,<span class="type">int</span> e)</span></span>&#123;`</span><br><span class="line"></span><br><span class="line">  `<span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;=L.length+<span class="number">1</span>)`</span><br><span class="line"></span><br><span class="line">​    `<span class="keyword">return</span> <span class="literal">false</span>;`</span><br><span class="line"></span><br><span class="line">  `<span class="keyword">if</span>(L.length = MaxSize)`</span><br><span class="line"></span><br><span class="line">​    `<span class="keyword">return</span> <span class="literal">false</span>;`</span><br><span class="line"></span><br><span class="line">  `<span class="keyword">for</span>(<span class="type">int</span> j=L.length;j&gt;=i;j--)`</span><br><span class="line"></span><br><span class="line">​    `L.data[j]=l.data[j<span class="number">-1</span>];`</span><br><span class="line"></span><br><span class="line">  `L.data[i<span class="number">-1</span>]=e;`</span><br><span class="line"></span><br><span class="line">  `L.length++;`</span><br><span class="line"></span><br><span class="line">  `<span class="keyword">return</span> <span class="literal">true</span>;`</span><br><span class="line"></span><br><span class="line">`&#125;`</span><br><span class="line"></span><br><span class="line">`<span class="function"><span class="type">bool</span> <span class="title">InitDelete</span><span class="params">(SqList L ,<span class="type">int</span> i,<span class="type">int</span> &amp;e)</span></span>&#123;`</span><br><span class="line"></span><br><span class="line">  `<span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;L.length)`</span><br><span class="line"></span><br><span class="line">​    `<span class="keyword">return</span> <span class="literal">false</span>;`</span><br><span class="line"></span><br><span class="line">  `<span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;L.length;j++)`</span><br><span class="line"></span><br><span class="line">​    `L.data[j<span class="number">-1</span>]=L.data[j];`</span><br><span class="line"></span><br><span class="line">  `L.length--;`</span><br><span class="line"></span><br><span class="line">  `<span class="keyword">return</span> <span class="literal">true</span>;`</span><br><span class="line"></span><br><span class="line">`&#125;`</span><br><span class="line"></span><br><span class="line">`<span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;`</span><br><span class="line"></span><br><span class="line">  `SqList L;`</span><br><span class="line"></span><br><span class="line">  `<span class="built_in">InitList</span>(L);`</span><br><span class="line"></span><br><span class="line">  `<span class="type">int</span> e = <span class="number">-1</span>;`</span><br><span class="line"></span><br><span class="line">  `<span class="keyword">if</span>(<span class="built_in">ListDelete</span>(L,<span class="number">3</span>,e))`</span><br><span class="line"></span><br><span class="line">​    `<span class="built_in">printf</span>(<span class="string">&quot;已经删除第三个数据元素，删除元素值为%d\n&quot;</span>,e);`</span><br><span class="line"></span><br><span class="line">  `<span class="keyword">else</span>`</span><br><span class="line"></span><br><span class="line">​    `<span class="built_in">printf</span>(<span class="string">&quot;位序i不合法，删除失败\n&quot;</span>);`</span><br><span class="line"></span><br><span class="line">  `<span class="keyword">return</span> <span class="number">0</span>;`</span><br><span class="line"></span><br><span class="line">``  </span><br><span class="line"></span><br><span class="line">``  </span><br><span class="line"></span><br><span class="line">`&#125;`</span><br><span class="line"></span><br><span class="line">`\<span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span>`</span></span><br><span class="line"></span><br><span class="line">`\<span class="meta">#<span class="keyword">define</span> InitSize 10<span class="comment">//初始化顺序表长度`</span></span></span><br><span class="line"></span><br><span class="line">`<span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;`</span><br><span class="line"></span><br><span class="line">  `<span class="type">int</span> *data;<span class="comment">//指示动态数组分配的指针`</span></span><br><span class="line"></span><br><span class="line">  `<span class="type">int</span> MaxSize;<span class="comment">//顺序表的最大容量`</span></span><br><span class="line"></span><br><span class="line">  `<span class="type">int</span> length;<span class="comment">//顺序表的当前长度`</span></span><br><span class="line"></span><br><span class="line">`&#125;SqList1;`</span><br><span class="line"></span><br><span class="line">`<span class="function"><span class="type">void</span> <span class="title">InitList</span><span class="params">(SqList &amp;L)</span></span>&#123;`</span><br><span class="line"></span><br><span class="line">  `<span class="comment">//利用malloc函数申请一篇连续的空间`</span></span><br><span class="line"></span><br><span class="line">  `L.data = (<span class="type">int</span> *)<span class="built_in">malloc</span>(InitSize*<span class="built_in">sizeof</span>(<span class="type">int</span>));<span class="comment">//malloc 返回一个指针类型，需要强转为动态指针的类型`</span></span><br><span class="line"></span><br><span class="line">  `L.length=<span class="number">0</span>;`</span><br><span class="line"></span><br><span class="line">  `L.MaxSize = InitSize;`</span><br><span class="line"></span><br><span class="line">`&#125;`</span><br><span class="line"></span><br><span class="line">## 二，跳转:small_airplane:</span><br><span class="line"></span><br><span class="line">#### 外部跳转-超链接:smiley:</span><br><span class="line"></span><br><span class="line">==格式为`[link text ](link) `==</span><br><span class="line"></span><br><span class="line">####<span class="meta"># eg:</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://aicexiaobai.github.io/">提示链接</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">请访问我的链接哦~</span><br><span class="line"></span><br><span class="line">[提示链接](https://aicexiaobai.github.io/)（按住Ctrl键再点击链接就会跳转。）</span><br><span class="line"></span><br><span class="line">#### 内部跳转-本文件内跳(Typroa支持):small_red_triangle_down:</span><br><span class="line"></span><br><span class="line">==格式为：[link text] (#要去的目的地--标题)==</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="#%E9%A5%BC%E5%9B%BE" title="Pie">我想跳转</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[我想跳转](#段落#())</span><br><span class="line"></span><br><span class="line">#### 自动链接:small_red_triangle_down:</span><br><span class="line"></span><br><span class="line">==使用`&lt;&gt;`包括的链接会自动跳转为超链接：==</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com/">https://www.baidu.com</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">https://www.baidu.com</span><br><span class="line"></span><br><span class="line">## 三，插入图片:small_airplane:</span><br><span class="line"></span><br><span class="line">##### 基本语法：:smiley:</span><br><span class="line"></span><br><span class="line">![]()</span><br><span class="line"></span><br><span class="line">##### 插入表格：:small_orange_diamond:</span><br><span class="line"></span><br><span class="line">​==用`|`来分隔不同的单元格，使用`-`来分隔表头和其他行：==</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>name</th><th>price</th></tr></thead><tbody><tr><td>friend</td><td>19</td></tr><tr><td>cola</td><td>32</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">| 学校 | 姓名 | 年龄 |</span><br><span class="line">| ---- | ---- | ---- |</span><br><span class="line">|      |      |      |</span><br><span class="line"></span><br><span class="line">​为了美观可以使用空格对齐不同的单元格，并在两侧使用`|`来标记单元格的边界，在表头下方的分割线标记中加入`:`,即可标记下方单元格的对齐方式：</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">name</th><th align="left">price</th></tr></thead><tbody><tr><td align="left">friend chicken</td><td align="left">19</td></tr><tr><td align="left">cola</td><td align="left">21</td></tr></tbody></table></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">| name           | price |</span><br><span class="line">| :------------- | :---- |</span><br><span class="line">| friend chicken | 19    |</span><br><span class="line">| cola           | 21    |</span><br><span class="line"></span><br><span class="line">#### 列表:</span><br><span class="line"></span><br><span class="line">#### 1，无序列表:small_red_triangle_down:</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以使用“*”作为标记<br>也可以使用“＋”<br>-或者<code>-</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* hhh</span><br><span class="line"></span><br><span class="line">#### 2，有序列表-数字.空格:small_red_triangle_down:</span><br><span class="line"></span><br><span class="line">1. </span><br><span class="line"></span><br><span class="line">#### 3.任务列表:small_red_triangle_down:</span><br><span class="line"></span><br><span class="line">`代码`</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>-[ ]吃早餐</li><li>-[x]背单词</li></ol><pre><code>`效果`:- [ ] - [x] 吃早餐    “-”[ ] ＋enter 生成#### 4.区块显示：:sweat_smile:#### “&gt;”＋ enter`效果`:&gt;## 四，分隔线:small_airplane:***==***加空格点回车即可==</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Markdown的基本使用&quot;&gt;&lt;a href=&quot;#Markdown的基本使用&quot; class=&quot;headerlink&quot; title=&quot;Markdown的基本使用&quot;&gt;&lt;/a&gt;Markdown的基本使用&lt;/h1&gt;&lt;h2 id=&quot;一，Markdown的基本语法-small</summary>
      
    
    
    
    
  </entry>
  
</feed>
